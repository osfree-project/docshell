/**************************************************************************
 *
 *  Copyright 2008, Roger Brown
 *
 *  This file is part of Roger Brown's Toolkit.
 *
 *  This program is free software: you can redistribute it and/or modify it
 *  under the terms of the GNU Lesser General Public License as published by the
 *  Free Software Foundation, either version 3 of the License, or (at your
 *  option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 *  more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>
 *
 */

/*
 * $Id$
 */

#ifndef _LINKSRCB_
#define _LINKSRCB_

#include <PstObj.idl>

interface  ODBaseLinkSource;
interface ODStorageUnit;
interface ODPart;
interface ODPartList;
interface ODLink;
interface ODDraft;
interface ODFacet;

#ifdef __PRIVATE__
interface ODTypeList;
#endif 

interface ODBaseLinkSource :  ODPersistentObject
{
	ODBoolean Lock(in ODULong wait,out ODLinkKey key);
	void Unlock(in ODLinkKey key);
	void Clear(in ODUpdateID id, in ODLinkKey key);
	ODStorageUnit GetContentStorageUnit(in ODLinkKey key);
	void ContentUpdated(in ODUpdateID id, in ODLinkKey key);
    ODBoolean ShowLinkSourceInfo(in ODFacet facet,in ODUpdateID change,in ODBoolean changesAllowed,out ODLinkInfoResult infoResult);
	ODUpdateID GetUpdateID();
	ODTime GetChangeTime();
	ODBoolean IsAutoUpdate();
	void SetAutoUpdate(in ODBoolean automatic);
	void SetSourcePart(in ODStorageUnit sourcePartSU);
#ifdef __PRIVATE__
	void InitBaseLinkSource(in ODStorageUnit storageUnit,in ODPart sourcePart);
	void InitBaseLinkSourceFromStorage(in ODStorageUnit storageUnit);
	void SetLink(in ODLink link);
	ODLink GetLink();
	void KeyValid(in ODLinkKey key);
	void ShowSourceContent();
	void LinkUpdateAlertCompleted(in ODLinkUpdateResult updateResult);
	void SetChangeTime(in ODTime changeTime, in ODLinkKey key);
	void SetUpdateID(in ODUpdateID changeID, in ODLinkKey key);
	ODStorageUnit AcquireSourcePart();
	void SetBaseLinkSourceDirty(in ODULong dirtyProperty);
#endif

#ifdef __SOMIDL__
    implementation
    {
        majorversion = 1; minorversion = 0;
		dllname="oddatax.dll";
#ifdef __PRIVATE__
        functionprefix=LinkSrcB_;
        override:
            somInit,
            somUninit,
            Externalize,
            ReleaseAll,
            CloneInto;

        ODStorageUnit   fContentSU;
        ODUpdateID              fNewUpdateID;
        ODUpdateID              fUpdateID;
        ODTime                  fChangeTime;
        ODULong                 fChangeCount;
        ODULong                 fChangeLimit;
        ODBoolean               fAutoUpdate;
        ODBoolean               fSuspended;
        ODBoolean               fUpdatedAfterSuspended;
        ODLink                  fLink;
        ODStorageUnit   fSourcePartSU;
        ODULong                 fDirty;
        ODUShort                fUpdateModel;
        ODTypeList              fKindsUsed;
        ODBoolean               fCleared;
#endif
        releaseorder:
            Lock,
            Unlock,
            Clear,
            GetContentStorageUnit,
            ContentUpdated,
            GetUpdateID,
            SetAutoUpdate,
            IsAutoUpdate,
            SetSourcePart,
            GetChangeTime,
            ShowLinkSourceInfo,
            InitBaseLinkSource,
            InitBaseLinkSourceFromStorage,
            SetLink,
            GetLink,
            KeyValid,
            ShowSourceContent,
            LinkUpdateAlertCompleted,
            SetChangeTime,
            SetUpdateID,
            AcquireSourcePart,
            SetBaseLinkSourceDirty;
    };
#endif
};
#endif

