/**************************************************************************
 *
 *  Copyright 2008, Roger Brown
 *
 *  This file is part of Roger Brown's Toolkit.
 *
 *  This program is free software: you can redistribute it and/or modify it
 *  under the terms of the GNU Lesser General Public License as published by the
 *  Free Software Foundation, either version 3 of the License, or (at your
 *  option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 *  more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>
 *
 */

/*
 * $Id$
 */

#ifndef _DOCMGRSHELL_
#define _DOCMGRSHELL_

#include <somobj.idl>
#include <mlink.idl>
#include <ODTypesM.idl>

interface ODSession;
interface ODContainer;
interface ODDocument;
interface ODDraft;
interface ODPart;
interface ODWindowState;
interface ODStorageUnit;

typedef somToken PlatformFile;
typedef somToken DraftInfoRec;
#ifdef _PLATFORM_WIN32_
    typedef somToken OleWrapper;
    typedef somToken IStream;
#endif

interface DocumentManager : somf_MLinkable
{
	void Initialize(in ODSession session);
	char* OpenDocumentFromFile(in char *fileName,in ODUShort actionFlag);
	char* OpenDocumentFromMemory(in ODHandle handle);
	void CreateDocumentInFile(in ODType kindName,in char* fileName);
	void CreateDocumentInMemory(in ODType kindName);
	void CreateDocumentAsStationery(in ODType kindName,in char* fileName);
	ODDocument GetDocument();
	void SaveDocument();
	void CloseDocument(in ODULong saveOption);
	ODBoolean CloseWindow(in ODPlatformWindow pwindow,in ODBoolean confirm);
	void CreateDraft(in ODULong draftNum, in ODIText modUser,in ODIText comment);
	ODBoolean OpenDraft(in ODDraft draft, in ODBoolean toBeRelease);
	void CloseDraft(in ODDraft draft);
	void SaveDraft();
	ODBoolean DeleteDraft(in DraftInfoRec* draftInfoRec);
	ODDraft	GetLatestCreatedDraft();
	ODDraft GetDraft();
	DraftInfoRec* GetDraftList();
	void DeleteDraftList();
	ODBoolean HasWriteAccess();
	void InternalizeHistory();
	void Revert();
	void SaveACopyAs(in ODDraft draft,inout PlatformFile file); 
#ifdef _PLATFORM_WIN32_
	void		SetOleWrapper(in OleWrapper *oleWrapper);
	OleWrapper*	GetOleWrapper();
#endif
	char*		GetFileName();
	void		SetFileName(in char *fileName);
	char*		GetPartKindName();
	void		SetPartKindName(in char *kindName);

#ifdef __PRIVATE__
	PlatformFile*	NewFileContainer(inout ODContainer container,
					in char* fileName);
	void		NewMemoryContainer(inout ODContainer container);
	void		CreateDocument(in ODContainer newContainer, 
					in ODType partKind);
	void		OpenFile(in PlatformFile* file, 
					in ODUShort actionFlag);
	void		OpenContainer(in ODContainer container);
	char*		OpenRootPart();
	PlatformFile*	CreateUntitledFile(in char* fileName);
	void 		RemoveChanges(in ODDraft draft);
	void		SetSession(in ODSession session);
	void		SetWindowState(in ODWindowState windowState);
	void		SetDraftList(in DraftInfoRec* draftList);
	ODBoolean		IsStationery(in ODDraft draft);
	void		SetStationery(in ODDraft draft);
	void		UnsetStationery(in ODDraft draft);
	void		CreateWorkingDraft();
	void		ResetDateModByInfo(in ODStorageUnit su);
	ODContainer		GetContainer();
	void		ContainerSaveACopyAs(in ODDraft draft, 
					in ODContainer newContainer);
	PlatformFile*	CopyStationery();
	ODBoolean	        IsReadOnlyDocument(in PlatformFile *file);
#endif

#ifdef __SOMIDL__
    implementation
    {
        majorversion = 1; 
		minorversion = 0;
		dllname="odshell.dll";

        releaseorder:
			Initialize,
			OpenDocumentFromFile,
			OpenDocumentFromMemory,
			CreateDocumentInFile,
			CreateDocumentInMemory,
			CreateDocumentAsStationery,
			GetDocument,
			SaveDocument,
			CloseDocument,
			CloseWindow,
			CreateDraft,
			OpenDraft,
			CloseDraft,
			SaveDraft,
			DeleteDraft,
			GetLatestCreatedDraft,
			GetDraft,
			GetDraftList,
			DeleteDraftList,
			HasWriteAccess,
			InternalizeHistory,
			Revert,
			SaveACopyAs,
		#ifdef _PLATFORM_WIN32_
			SetOleWrapper,
			GetOleWrapper,
		#endif
			GetFileName,
			SetFileName,
			GetPartKindName,
			SetPartKindName,
			NewFileContainer,
			NewMemoryContainer,
			CreateDocument,
			OpenFile,
			OpenContainer,
			OpenRootPart,
			CreateUntitledFile,
			RemoveChanges,
			SetSession,
			SetWindowState,
			SetDraftList,
			IsStationery,
			SetStationery,
			UnsetStationery,
			CreateWorkingDraft,
			ResetDateModByInfo,
			ContainerSaveACopyAs,
			GetContainer,
			CopyStationery,
			IsReadOnlyDocument;

		#ifdef __PRIVATE__
	        functionprefix = DocMgr_;
			ODSession fSession;
			ODWindowState fWindowState;
			ODContainer	fContainer;
			ODDocument fDocument;
			ODDraft	fDraft;
			ODDraftPermissions fDraftPermissions;
			DraftInfoRec *fDraftList;
			#ifdef _PLATFORM_WIN32_
			  OleWrapper *fOleWrapper;
			#endif
			char fFileName[256];
			char fPartKindName[256];
			ODBoolean fUnsavedDocument;
		#endif

		passthru C_xh="#include <PlfmFile.h>";
		passthru C_h="#include <PlfmFile.h>";
  };
#endif
};
#endif

